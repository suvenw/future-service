package ${packageName}.${moduleName}.service;

import java.util.List;


import ${packageName}.${moduleName}.dto.request.${className}RequestDto;
import ${packageName}.${moduleName}.dto.response.${className}ResponseDto;
import ${mainPath}.common.data.BasePage;
import ${mainPath}.http.data.vo.ResponseResultList;
import java.io.InputStream;


/**
 * @ClassName: ${className}Service.java
 *
 * @Author 作者 : ${author}
 * @CreateDate 创建时间: ${datetime}
 * @Version 版本: v1.0.0
 * <pre>
 *
 *  @Description: ${description} RPC业务接口逻辑实现类
 *
 * </pre>
 * <pre>
 * 修改记录
 *    修改后版本:     修改人：  修改日期:     修改内容:
 * ----------------------------------------------------------------------------
 *
 * ----------------------------------------------------------------------------
 * </pre>
 * @Copyright: (c) 2021 gc by https://www.suven.top
 **/

public interface ${className}Service {



	/**
	 * 保存用户信息同时更新数据库和缓存的实现方法
	 * @param ${paramName}RequestDto  ${className}RequestDto
	 * @return
	 */
	${className}ResponseDto save${className}(${className}RequestDto ${paramName}RequestDto);

	/**
	 * 更新用户信息同时更新数据库和缓存的实现方法
	 * @param ${paramName}RequestDto  ${className}RequestDto
	 * @return
	 */
	boolean update${className} (${className}RequestDto ${paramName}RequestDto);
	


	
	/**
	 * 通过主键ID删除对象信息实现缓存和数据库,同时删除的方法
	 * @param  ${paramName}Ids
	 * @return
	 */
	 int del${className}ByIds(List<Long>  ${paramName}Ids);
	
	
	/**
	 * 通过主键ID更新对象用户信息实现缓存和数据库更新的方法
	 * @param  ${paramName}Id 
	 * @return
	 */
	${className}ResponseDto get${className}ById(long ${paramName}Id);

	
	
		/**
	 * 通过分页获取${className}ResponseDto信息实现查找缓存和数据库的方法
	 * @param page BasePage
	 * @return
	 */
	List<${className}ResponseDto> get${className}ByPage(BasePage page);


        /**
        * 通过分页获取${className}信息实现查找缓存和数据库的方法
        * @param page BasePage
        * @return
        * @author ${author}
        * @date ${datetime}
        */
        ResponseResultList<${className}ResponseDto> get${className}ByNextPage(BasePage page);

        /**
        * @Title: 启用${description}信息
        * @Description:
        * @return
        * @throw
        * @author ${author}
        * @date ${datetime}
        *  --------------------------------------------------------
        *  modifyer    modifyTime                 comment
        *
        *  --------------------------------------------------------
        */
        public boolean turnOn(List<Long> idList);

        /**
        * @Title: 禁用${description}信息
        * @Description:
        * @return
        * @throw
        * @author ${author}
        * @date ${datetime}
        *  --------------------------------------------------------
        *  modifyer    modifyTime                 comment
        *
        *  --------------------------------------------------------
        */
        public boolean turnOff(List<Long> idList);


        /**
        * @Title: 修改排序字段${description}信息
        * @Description:
        * @return
        * @author ${author}
        * @date ${datetime}
        *  --------------------------------------------------------
        *  modifyer    modifyTime                 comment
        *
        *  --------------------------------------------------------
        */
        public boolean updateSortById(long id ,int sort);


        /**
        * @Title: 禁用${description}信息
        * @Description:
        * @return
        * @author ${author}
        * @date ${datetime}
        */
        public boolean updateSortByIds(List<Long> idList,List<Integer> sortList);

		/**
 		* 获取总行数
 		* @param  ${className}RequestDto
 		* @return
 		* @author suven
 		* @date 2019-11-06 15:13:48
 		*/
		int get${className}Count(${className}RequestDto ${paramName}RequestDto);

		/**
    	* 通过上传excel 保存数据到数据库
    	* @param initialStream
    	* @return
    	*/
		public boolean saveData(InputStream initialStream);

}