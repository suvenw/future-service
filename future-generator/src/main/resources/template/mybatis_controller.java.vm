package ${packageName}.${moduleName}.controller;



import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
${importAutowiredPackage}

import ${mainPath}.http.data.vo.ResponseResultList;
import ${mainPath}.http.handler.OutputResponse;
import ${mainPath}.http.data.vo.HttpRequestByIdVo;
import ${mainPath}.common.data.BasePage;
import ${mainPath}.common.api.ApiDoc;
import ${mainPath}.common.api.DocumentConst;

import ${packageName}.${moduleName}.facade.${className}Facade;
import ${packageName}.${moduleName}.service.${className}Service;
import ${packageName}.${moduleName}.vo.request.${className}QueryRequestVo;
import ${packageName}.${moduleName}.vo.response.${className}ShowResponseVo;
import ${packageName}.${moduleName}.dto.request.${className}RequestDto;
import ${packageName}.${moduleName}.dto.response.${className}ResponseDto;
import ${packageName}.${moduleName}.dto.enums.${className}QueryEnum;
import ${packageName}.${moduleName}.vo.request.${className}RequestVo;
import ${packageName}.${moduleName}.vo.response.${className}ResponseVo;

import ${packageName}.${moduleName}.vo.request.${className}AddRequestVo;
import ${packageName}.${moduleName}.vo.response.${className}ResponseVo;

/**
 * @ClassName: ${className}Controller.java
 *
 * @Author 作者 : ${author}
 * @CreateDate 创建时间: ${datetime}
 * @Version 版本: v1.0.0
 * <pre>
 *
 *  @Description: ${description} 的控制服务类
 *
 * </pre>
 * <pre>
 * 修改记录
 *    修改后版本:     修改人：  修改日期:     修改内容:
 * ----------------------------------------------------------------------------
 *
 * ----------------------------------------------------------------------------
 * @RequestMapping("/${moduleName}/${paramName}")
 * </pre>
 * @Copyright: (c) 2021 gc by https://www.suven.top
 **/

@ApiDoc(
        group = DocumentConst.Api.API_DOC_GROUP,
        groupDesc= DocumentConst.Api.API_DOC_DES,
        module = "${description}模块", isApp = true
)
@Controller
public class ${className}Controller {

    @Autowired
    private ${className}Facade  ${paramName}Facade;

    ${importAutowired}
    private ${className}Service  ${paramName}Service;

    public interface UrlCommand{
        public static final String ${moduleName}_${paramName}_pageList = "/${moduleName}/${pathName}/pageList";
        public static final String ${moduleName}_${paramName}_info = "/${moduleName}/${pathName}/info";
    }

    /**
    * @Title: 分页获取${description}信息
    * @Description:${paramName}QueryRequestVo @{Link ${className}QueryRequestVo}
    * @param
    * @return
    * @author ${author}
    * @date ${datetime}
    *  --------------------------------------------------------
    *  modifyer    modifyTime                 comment
    *
    *  --------------------------------------------------------
    */
    @ApiDoc(
            value = "分页获取${description}信息",
            request = ${className}QueryRequestVo.class,
            response = ${className}ShowResponseVo.class
    )
    @RequestMapping(value = UrlCommand.${moduleName}_${paramName}_pageList, method = RequestMethod.GET)
    public void list( OutputResponse out, ${className}QueryRequestVo ${paramName}QueryRequestVo){
            ${className}RequestDto ${paramName}RequestDto = ${className}RequestDto.build( ).clone(${paramName}QueryRequestVo);

        BasePage page =  BasePage.build().toPageSize(${paramName}QueryRequestVo.getPageSize()).toPageNo(${paramName}QueryRequestVo.getPageNo());
        page.toParamObject(${paramName}RequestDto );
        ResponseResultList<${className}ResponseDto> resultList = ${paramName}Service.get${className}ByNextPage(page,null);

        if(null == resultList || resultList.getList().isEmpty() ){
            out.writeSuccess();
            return;
        }
        List<${className}ShowResponseVo> listVo = new ArrayList<>();
        resultList.getList().forEach(e -> listVo.add(${className}ShowResponseVo.build().clone(e)));

        ResponseResultList list =  ResponseResultList.build(listVo,page.getSize());

        out.write(list);
    }





    /**
    * @Title: 查看${description}信息
    * @Description:HttpRequestByIdVo @{Link HttpRequestByIdVo}
    * @param
    * @return
    * @author ${author}
    * @date ${datetime}
    *  --------------------------------------------------------
    *  modifyer    modifyTime                 comment
    *
    *  --------------------------------------------------------
    */
    @ApiDoc(
            value = "查看${description}信息",
            request = HttpRequestByIdVo.class,
            response = ${className}ShowResponseVo.class
    )
    @RequestMapping(value = UrlCommand.${moduleName}_${paramName}_info ,method = RequestMethod.GET)
    public void detail(OutputResponse out, HttpRequestByIdVo idRequestVo){

            ${className}ResponseDto ${paramName}ResponseDto = ${paramName}Service.get${className}ById(idRequestVo.getId());
            ${className}ShowResponseVo vo =  ${className}ShowResponseVo.build().clone(${paramName}ResponseDto);
        out.write(vo);
    }



}
